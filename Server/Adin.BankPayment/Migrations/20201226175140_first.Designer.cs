// <auto-generated />
using System;
using Adin.BankPayment.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Adin.BankPayment.Migrations
{
    [DbContext(typeof(BankPaymentContext))]
    [Migration("20201226175140_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrivateKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PublicKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.ApplicationBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("BankId");

                    b.ToTable("ApplicationBank");
                });

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.ApplicationBankParam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationBankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParamKey")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ParamValue")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationBankId");

                    b.ToTable("ApplicationBankParam");
                });

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Code")
                        .HasColumnType("tinyint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostUrl")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Bank");

                    b.HasData(
                        new
                        {
                            Id = new Guid("482a591e-7536-4f47-a544-e9d4342586bd"),
                            Code = (byte)1,
                            CreatedBy = 1,
                            CreationDate = new DateTime(2020, 12, 26, 21, 21, 39, 519, DateTimeKind.Local).AddTicks(7727),
                            IsDeleted = false,
                            PostUrl = "https://sep.shaparak.ir/MobilePG/MobilePayment",
                            Status = (byte)0,
                            Title = "سامان"
                        },
                        new
                        {
                            Id = new Guid("ab3f226a-be56-4092-bbd0-2ae8ffbce131"),
                            Code = (byte)2,
                            CreatedBy = 1,
                            CreationDate = new DateTime(2020, 12, 26, 21, 21, 39, 523, DateTimeKind.Local).AddTicks(1324),
                            IsDeleted = false,
                            PostUrl = "https://pec.shaparak.ir/NewIPG?Token={0}",
                            Status = (byte)0,
                            Title = "پارسیان"
                        },
                        new
                        {
                            Id = new Guid("98504148-3d89-4abb-9fb5-281bed8714e3"),
                            Code = (byte)3,
                            CreatedBy = 1,
                            CreationDate = new DateTime(2020, 12, 26, 21, 21, 39, 523, DateTimeKind.Local).AddTicks(1429),
                            IsDeleted = false,
                            PostUrl = "https://bpm.shaparak.ir/pgwchannel/startpay.mellat",
                            Status = (byte)0,
                            Title = "ملت"
                        },
                        new
                        {
                            Id = new Guid("8c4d3794-983f-4610-bf88-abe8db1ad07d"),
                            Code = (byte)4,
                            CreatedBy = 1,
                            CreationDate = new DateTime(2020, 12, 26, 21, 21, 39, 523, DateTimeKind.Local).AddTicks(1439),
                            IsDeleted = false,
                            PostUrl = "https://pf.efarda.ir/pf/api/ipg/purchase",
                            Status = (byte)0,
                            Title = "تجارت الکترونیکی ارتباط فردا"
                        },
                        new
                        {
                            Id = new Guid("e147830f-696d-4c4a-a7b4-b20722dd3ff6"),
                            Code = (byte)5,
                            CreatedBy = 1,
                            CreationDate = new DateTime(2020, 12, 26, 21, 21, 39, 523, DateTimeKind.Local).AddTicks(1445),
                            IsDeleted = false,
                            PostUrl = "https://pep.shaparak.ir/payment.aspx",
                            Status = (byte)0,
                            Title = "پاسارگاد"
                        });
                });

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BankErrorCode")
                        .HasColumnType("int");

                    b.Property<string>("BankErrorMessage")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankRedirectUrl")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("BankTrackCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CallbackUrl")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("ErrorCode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<long?>("Mobile")
                        .HasColumnType("bigint");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserTrackCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("BankId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.ApplicationBank", b =>
                {
                    b.HasOne("Adin.BankPayment.Domain.Model.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adin.BankPayment.Domain.Model.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.ApplicationBankParam", b =>
                {
                    b.HasOne("Adin.BankPayment.Domain.Model.ApplicationBank", "ApplicationBank")
                        .WithMany("ApplicationBankParams")
                        .HasForeignKey("ApplicationBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationBank");
                });

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.Transaction", b =>
                {
                    b.HasOne("Adin.BankPayment.Domain.Model.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adin.BankPayment.Domain.Model.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Adin.BankPayment.Domain.Model.ApplicationBank", b =>
                {
                    b.Navigation("ApplicationBankParams");
                });
#pragma warning restore 612, 618
        }
    }
}
